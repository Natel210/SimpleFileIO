name: Simple File I/O Library Main Action

on:
  push:
    branches:
      - main  # 메인 브랜치에서 실행

permissions:
  contents: write  # Release 생성 및 업로드를 위해 권한 필요

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Debug, Release]  # Debug와 Release 두 가지 구성

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore SimpleFileIO.sln

    - name: Build solution
      run: dotnet build SimpleFileIO/SimpleFileIO.csproj --configuration ${{ matrix.configuration }} --no-restore

    - name: Publish DLL
      run: dotnet publish SimpleFileIO/SimpleFileIO.csproj --configuration ${{ matrix.configuration }} --output ./output/${{ matrix.configuration }}

    - name: Verify Output Folder
      run: |
        if [ ! -f "./output/${{ matrix.configuration }}/SimpleFileIO.dll" ]; then
          echo "DLL not found for ${{ matrix.configuration }} configuration."
          exit 1
        fi

    # 릴리즈 생성 - Debug와 Release 공통 릴리즈 생성
    - name: Create Release
      if: ${{ matrix.configuration == 'Debug' }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0  # 단일 릴리즈 생성 (디버그와 릴리즈 구분 X)
        release_name: "Simple File I/O Library"
        draft: false
        prerelease: false

    # 릴리즈에 Debug 또는 Release 파일 업로드
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output/${{ matrix.configuration }}/SimpleFileIO.dll
        asset_name: SimpleFileIO-${{ matrix.configuration }}.dll
        asset_content_type: application/octet-stream
