name: Main CI (Continuous Integration)

on:
  push:
    branches-ignore:
      - 'main'

permissions:
  contents: write
  statuses: write

jobs:
  info:
    name: Info
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Git Info
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "Event: Push"
          
            # Push Event: Extract Branch or Tag Information
            ref=${{ github.ref }}
            if [[ "$ref" == refs/heads/* ]]; then
              branch_name=${ref#refs/heads/}
              tag_name="N/A"
            elif [[ "$ref" == refs/tags/* ]]; then
              branch_name="N/A"
              tag_name=${ref#refs/tags/}
            else
              echo "Unknown ref type for push: $ref"
              exit 1
            fi
          
            # Commit Information
            commit_hash=$(git rev-parse HEAD)
            commit_message=$(git log -1 --pretty=format:%s)
            commit_author=$(git log -1 --pretty=format:'%an <%ae>')
          
            # Output
            echo "Branch Name      : $branch_name"
            echo "Tag Name         : $tag_name"
            echo "Commit Hash      : $commit_hash"
            echo "Commit Message   : $commit_message"
            echo "Author           : $commit_author"
          
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Event: Pull Request"
          
            # Pull Request Event: Extract Source and Target Branch Information
            source_branch=${{ github.head_ref }}
            target_branch=${{ github.base_ref }}
          
            # Commit Information
            commit_hash=$(git rev-parse HEAD)
            commit_message=$(git log -1 --pretty=format:%s)
            commit_author=$(git log -1 --pretty=format:'%an <%ae>')
          
            # Output
            echo "Source Branch Name : $source_branch"
            echo "Target Branch Name : $target_branch"
            echo "Commit Hash        : $commit_hash"
            echo "Commit Message     : $commit_message"
            echo "Author             : $commit_author"
          else
            echo "Unknown event type: ${{ github.event_name }}"
            exit 1
          fi
      - name: Exist Files
        run: |
          # Define required files or directories
          solution_file="SimpleFileIO.sln"
          dll_file="SimpleFileIO/SimpleFileIO.csproj"
          tester_file="SimpleFileIO_Tester/SimpleFileIO_Tester.csproj"
              
          # Initialize flags
          error_flag=0
            
          echo "Check Files"

          # Check solution file
          if [ -f "$solution_file" ]; then
            echo "> Solution : $solution_file"
          else
            echo "Error: $solution_file not found"
            error_flag=1
          fi
              
          # Check DLL file
          if [ -f "$dll_file" ]; then
            echo "> DLL : $dll_file"
          else
            echo "Error: $dll_file not found"
            error_flag=1
          fi
              
          # Check Tester project file
          if [ -f "$tester_file" ]; then
            echo "> Tester : $tester_file"
          else
            echo "Error: $tester_file not found"
            error_flag=1
          fi
          
          echo ""
          echo "Result"

          # Exit with error if any required file is missing
          if [ $error_flag -eq 1 ]; then
            echo "> One or more required files are missing."
            exit 1
          else
            echo "> All required files are present."
          fi
      - name: All Path List
        run: |
          ls -R
  windows:
    name: Windows
    runs-on: windows-latest
    needs: info
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore dependencies
        run: dotnet restore SimpleFileIO.sln --no-cache
      - name: Build Debug Dll
        run: dotnet build SimpleFileIO/SimpleFileIO.csproj --configuration Debug --no-restore --output ./build/debug
      - name: Build Release Dll
        run: dotnet build SimpleFileIO/SimpleFileIO.csproj --configuration Release --no-restore --output ./build/release
      - name: Run Debug Unit Tests
        run: dotnet test SimpleFileIO_Tester/SimpleFileIO_Tester.csproj --configuration Debug --no-restore --output ./build/debug --verbosity normal
      - name: Run Release Unit Tests
        run: dotnet test SimpleFileIO_Tester/SimpleFileIO_Tester.csproj --configuration Release --no-restore --output ./build/release --verbosity normal
