name: Main CI/CD

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write
  statuses: write

jobs:
  info:
    name: Info
    runs-on: ubuntu-latest
    env:
      EVNET: "${{ github.event_name }}"
      REF: "${{ github.ref }}"
      HEAD_REF: "${{ github.head_ref }}"
      BASE_REF: "${{ github.base_ref }}"
      SOLUTION_FILE: "SimpleFileIO.sln"
      DLL_FILE: "SimpleFileIO/SimpleFileIO.csproj"
      TESTER_FILE: "SimpleFileIO_Tester/SimpleFileIO_Tester.csproj"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Script Setting
        run: chmod +x .github/workflows/scripts/info/*.sh

      - name: Set Environment Variables
        run: .github/workflows/scripts/info/env-value.sh  "$EVNET" "$REF" "$HEAD_REF" "$BASE_REF" "$SOLUTION_FILE" "$DLL_FILE" "$TESTER_FILE"

      - name: Git Info
        run: .github/workflows/scripts/info/git-info.sh  "$EVNET" "$REF" "$HEAD_REF" "$BASE_REF"

      - name: Exist Files
        run: .github/workflows/scripts/info/exist-dll-tester-files.sh "$SOLUTION_FILE" "$DLL_FILE" "$TESTER_FILE"

      - name: All Path List
        run: ls -R

  windows-debug-ci:
    name: Windows Debug CI
    runs-on: windows-latest
    needs: info
    env:
      SOLUTION_FILE: "SimpleFileIO.sln"
      DLL_FILE: "SimpleFileIO/SimpleFileIO.csproj"
      TESTER_FILE: "SimpleFileIO_Tester/SimpleFileIO_Tester.csproj"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore "${{ env.SOLUTION_FILE }}" --no-cache

      - name: Build Release Dll
        run: dotnet build "${{ env.DLL_FILE }}" --configuration Release --no-restore --output ./build/release

      - name: Run Debug Unit Tests
        run: dotnet test "${{ env.TESTER_FILE }}" --configuration Debug --no-restore --output ./build/debug --verbosity normal

  windows-release-ci:
    name: Windows Release CI
    runs-on: windows-latest
    needs: info
    env:
      SOLUTION_FILE: "SimpleFileIO.sln"
      DLL_FILE: "SimpleFileIO/SimpleFileIO.csproj"
      TESTER_FILE: "SimpleFileIO_Tester/SimpleFileIO_Tester.csproj"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore "${{ env.SOLUTION_FILE }}" --no-cache

      - name: Build Release Dll
        run: dotnet build "${{ env.DLL_FILE }}" --configuration Release --no-restore --output ./build/release

      - name: Run Release Unit Tests
        run: dotnet test "${{ env.TESTER_FILE }}" --configuration Release --no-restore --output ./build/release --verbosity normal

  linux-debug-ci:
    name: Linux Debug CI
    runs-on: ubuntu-latest
    needs: info
    env:
      SOLUTION_FILE: "SimpleFileIO.sln"
      DLL_FILE: "SimpleFileIO/SimpleFileIO.csproj"
      TESTER_FILE: "SimpleFileIO_Tester/SimpleFileIO_Tester.csproj"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
  
      - name: Restore dependencies
        run: dotnet restore "${{ env.SOLUTION_FILE }}" --no-cache
  
      - name: Build Release Dll
        run: dotnet build "${{ env.DLL_FILE }}" --configuration Release --no-restore --output ./build/window/release
  
      - name: Run Debug Unit Tests
        run: dotnet test "${{ env.TESTER_FILE }}" --configuration Debug --no-restore --output ./build/window/debug --verbosity normal
  
  linux-release-ci:
    name: Linux Release CI
    runs-on: ubuntu-latest
    needs: info
    env:
      SOLUTION_FILE: "SimpleFileIO.sln"
      DLL_FILE: "SimpleFileIO/SimpleFileIO.csproj"
      TESTER_FILE: "SimpleFileIO_Tester/SimpleFileIO_Tester.csproj"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
  
      - name: Restore dependencies
        run: dotnet restore "${{ env.SOLUTION_FILE }}" --no-cache
  
      - name: Build Release Dll
        run: dotnet build "${{ env.DLL_FILE }}" --configuration Release --no-restore --output ./build/linux/release
  
      - name: Run Release Unit Tests
        run: dotnet test "${{ env.TESTER_FILE }}" --configuration Release --no-restore --output ./build/linux/release --verbosity normal

  check-event:
    name: Check Event
    needs: [windows-debug-ci, windows-release-ci, linux-debug-ci, linux-release-ci]
    runs-on: ubuntu-latest
    if: ${{github.event_name == 'push'}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Is Push Event
        run: echo "Push Ok... Continue to Create Tag..."

  create-tag:
    name: Create Tag
    needs: check-event
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Script Setting
        run: chmod +x .github/workflows/scripts/create-tag/*.sh
  
      - name: Create Tag
        run: .github/workflows/scripts/create-tag/create-tag.sh

  # create-zip:
  #   name: Create ZIP
  #   needs: create-tag
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  
  #     - name: Create Debug and Release ZIP
  #       run: |
  #         mkdir -p ./final-output/debug
  #         mkdir -p ./final-output/release
          
  #         ##linux

  #         # Copy Debug files
  #         cp -r ./build/debug/*.dll ./final-output/debug/
  #         cp -r ./build/debug/*.pdb ./final-output/debug/
          
  #         # Copy Release files
  #         cp -r ./build/release/*.dll ./final-output/release/
          
  #         # Create a single ZIP file
  #         zip -r final_build.zip ./final-output

  create-release-note:
    name: Create Release Note
    needs: create-tag
    runs-on: ubuntu-latest
    env:
      SOLUTION_FILE: "SimpleFileIO.sln"
      DLL_FILE: "SimpleFileIO/SimpleFileIO.csproj"
      TESTER_FILE: "SimpleFileIO_Tester/SimpleFileIO_Tester.csproj"
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Repository
        run: ls -R



      # - name: Setup .NET
      #   uses: actions/setup-dotnet@v4
      #   with:
      #     dotnet-version: '8.0.x'

      # - name: Restore dependencies
      #   run: dotnet restore "${{ env.SOLUTION_FILE }}" --no-cache

      # - name: Build Debug
      #   run: dotnet build "${{ env.DLL_FILE }}" --configuration Debug --no-restore --output ./build/debug

      # - name: Build Release
      #   run: dotnet build "${{ env.DLL_FILE }}" --configuration Release --no-restore --output ./build/release
