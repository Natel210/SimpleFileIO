name: Continuous Integration (CI)

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: read

jobs:
  start-ci:
    name: Start CI
    runs-on: ubuntu-latest
    steps:
    - name: CI Process Started
      run: |
        ref=${{ github.ref }}
        if [[ "$ref" == refs/heads/* ]]; then
          branch_name=${ref#refs/heads/}
          echo "Continuous Integration process started for branch: $branch_name"
        elif [[ "$ref" == refs/tags/* ]]; then
          tag_name=${ref#refs/tags/}
          echo "Continuous Integration process started for tag: $tag_name"
        else
          echo "Unknown ref type: $ref"
          exit 1
        fi
  checkout-setup:
    name: Set Up
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check Directory
      run: |
        echo "Current directory: $(pwd)"
        echo "Listing all files and directories:"
        ls -R
      
    - name: Verify Solution File
      run: |
        if [ -f "SimpleFileIO.sln" ]; then
          echo "Solution file found: SimpleFileIO.sln"
        else
          echo "Error: SimpleFileIO.sln not found."
          exit 1
        fi

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore SimpleFileIO.sln --verbosity detailed

    - name: Upload Checkout Setup Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: checkout-setup-artifacts
        path: .

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: checkout-setup
    strategy:
      matrix:
        configuration: [Debug, Release]

        
    steps:
    - name: Download Checkout Setup Artifacts
      uses: actions/download-artifact@v4
      with:
        name: checkout-setup-artifacts


    - name: Build ${{ matrix.configuration }} Configuration
      run: |
        echo "Building project in ${{ matrix.configuration }} mode..."
        dotnet build SimpleFileIO/SimpleFileIO.csproj --configuration ${{ matrix.configuration }} --no-restore
        echo "Build completed for ${{ matrix.configuration }} configuration."

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        configuration: [Debug, Release]
    steps:

    - name: Download Checkout Setup Artifacts
      uses: actions/download-artifact@v4
      with:
        name: checkout-setup-artifacts

    - name: Run ${{ matrix.configuration }} Unit Tests
      run: |
        echo "Running unit tests in ${{ matrix.configuration }} mode..."
        dotnet test SimpleFileIO/SimpleFileIO_Tester.csproj --configuration ${{ matrix.configuration }} --no-restore --verbosity normal
        echo "Unit tests completed for ${{ matrix.configuration }} configuration."
