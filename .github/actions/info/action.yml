name: Info And Check
description: ""
inputs:
  # solution & project
  solution_file_path:
    description: ""
    required: true
  dll_project_file_path:
    description: ""
    required: true
  build_directory_path:
    description: ""
    required: false
    default: "N/A"
  tester_project_file_path:
    description: ""
    required: false
    default: "N/A"
  tester_executable_file_name:
    description: ""
    required: false
    default: "N/A"

  # deploy
  result_zip_name:
    description: ""
    required: true
  tag_prefix:
    description: ""
    required: true

  # git
  git_event_name:
    description: ""
    required: true
  git_ref:
    description: ""
    required: false
    default: "N/A"
  head_ref:
    description: ""
    required: false
    default: "N/A"
  base_ref:
    description: ""
    required: false
    default: "N/A"

runs:
  using: "composite"
  steps:
    - name: Add Execute Permission for Scripts
      run: |
        echo Add Execute Permission for Scripts
        chmod +x ./.scripts/check/*.sh
      shell: bash

    - name: Check Solution & Project Values
      run: |
        echo Check Solution & Project Values
        ./.scripts/check/values.sh "$JSON_DATA" "solution_project_value.result"
      env:
        JSON_DATA: |
          {
            "Solution File Path": "SimpleFileIO.sln",
            "Dll File Path": "SimpleFileIO/SimpleFileIO.csproj",
            "Build Directory Path": "./build",
            "Tester File Path": "SimpleFileIO_Tester/SimpleFileIO_Tester.csproj",
            "Tester Executable File Name": "SimpleFileIO_Tester"
          }
      shell: bash

    - name: Check Deploy Values
      run: |
        echo Check Deploy Values
        ./.scripts/check/values.sh "$JSON_DATA" "deploy_value.result"
      env: 
        JSON_DATA: |
          {
            "Result Zip Name": "${{ inputs.result_zip_name }}",
            "Tag Prefix": "${{ inputs.tag_prefix }}"
          }
      shell: bash

    - name: Check Git Values
      run: |
        echo Check Git Values
        ./.scripts/check/values.sh "$JSON_DATA" "git_value.result"
      env: 
        JSON_DATA: |
          {
            "Event": "${{ inputs.git_event_name }}",
            "Ref": "${{ inputs.git_ref }}",
            "Head Ref": "${{ inputs.head_ref }}",
            "Base Ref": "${{ inputs.base_ref }}"
          }
      shell: bash

    - name: Check Exist Files
      run: |
        echo Check Exist Files
        ./.scripts/check/exist-files.sh "$JSON_DATA" "exist_files.result"
      env: 
        JSON_DATA: |
          {
            "Solution File Path": "SimpleFileIO.sln",
            "Dll File Path": "SimpleFileIO/SimpleFileIO.csproj",
            "Build Directory Path": "./build",
            "Tester Executable File Name": "SimpleFileIO_Tester",
            "Tester File Path": "SimpleFileIO_Tester/SimpleFileIO_Tester.csproj"
          }
      shell: bash





    - name: Remove Execute Permission for Scripts
      run: |
        echo Remove Execute Permission for Scripts
        chmod -x ./.scripts/check/*.sh
      shell: bash

    - name: Output  Logs
      run: |
        echo " "
        echo " "
        echo -e "\033[0;36m----Git Event----\033[0m"
        echo -e "\033[0;36m----File Exist----\033[0m"
        echo -e "\033[0;36m----Values----\033[0m"
        echo ::Group:: Solution \& Project
        cat solution_project_value.result
        echo ::Endgroup::
        echo ::Group:: Deploy
        cat deploy_value.result
        echo ::Endgroup::
        echo ::Group:: Git
        cat git_value.result
        echo ::Endgroup::
      shell: bash