name: Build Test .NET
description: Build Test .NET
inputs:
  project_file_path:
    description: Build Test Project File Path
    required: true
  build_configuration:
    description: Build configuration (e.g., Debug, Release)
    required: true
  dotnet_version:
    description: .NET version to use
    required: true
runs:
  using: "composite"
  steps:
    - name: Setup .NET environment
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet_version }}

    # Output Result Log 
    # ./${{ runner.os }}/${{ inputs.build_configuration }}.result
    - name: Build Test on Linux
      if: runner.os == 'Linux'
      run: |
        lower_os=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
        lower_config=$(echo "${{ inputs.build_configuration }}" | tr '[:upper:]' '[:lower:]')
        chmod +x ./.scripts/build-validation/dotnet.sh
        ./.scripts/build-validation/dotnet.sh "${{ inputs.project_file_path }}" "${{ lower_config }}" "./${{ lower_os }}-${{ lower_config }}.result"
        cat ./${{ lower_os }}/${{ lower_config }}.result
        # chmod -x ./.scripts/build-validation/dotnet.sh
      shell: bash

    # Output Result Log 
    # ./${{ runner.os }}/${{ inputs.build_configuration }}.result
    - name: Build Test on Windows
      if: runner.os == 'Windows'
      run: |
        $lower_os = "${{ runner.os }}".ToLower()
        $lower_config = "${{ inputs.build_configuration }}".ToLower()
        ./.scripts/build-validation/dotnet.ps1 "${{ inputs.project_file_path }}" "${{ lower_config }}" "./${{ lower_os }}-${{ lower_config }}.result"
        # Get-Content ./${{ lower_os }}/${{ lower_config }}.result
      shell: pwsh

