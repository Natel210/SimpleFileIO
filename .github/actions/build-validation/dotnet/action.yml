name: Build Test .NET
description: >
  Build Test .NET
inputs:
  project_file_path:
    description: Build Test Project File Path
    required: true
  build_configuration:
    description: Build configuration (e.g., Debug, Release)
    required: true
  dotnet_version:
    description: .NET version to use
    required: true
output:
  result:
    description: build result
    value:

runs:
  using: "composite"
  steps:
    - name: Setup .NET environment
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet_version }}

    - name: Build Test on Linux
      if: runner.os == 'Linux'
      run: |
        # Build Test on Linux

        # Add Execute Permission for Script
        chmod +x ./.scripts/build_validation/dotnet.sh

        # Create Temp
        temp_file=$(mktemp)

        # To Work
        ./.scripts/build_validation/dotnet.sh "${{ inputs.project_file_path }}" "${{ inputs.build_configuration }}" "$temp_file"

        # Multi Line
        multi_line_output=$(cat $temp_file)
        echo "result<<EOF" >> $GITHUB_OUTPUT
        echo "$multi_line_output" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

        # Remove Temp
        rm -f "$temp_file"

        # Remove Execute Permission for Script
        chmod -x ./.scripts/build_validation/dotnet.sh
      shell: bash

    - name: Build Test on Windows
      if: runner.os == 'Windows'
      run: |
        # Build Test on Windows

        # Create Temp
        $temp_file = New-TemporaryFile

        # To Work
        ./.scripts/build_validation/dotnet.ps1 "${{ inputs.project_file_path }}" "${{ inputs.build_configuration }}" "$temp_file"

        # Capture multi-line output
        $multi_line_output = Get-Content $temp_file | Out-String
        echo "result<<EOF" >> $GITHUB_OUTPUT
        echo "$multi_line_output" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

        # Remove Execute Permission for Script
        Remove-Item -Path $temp_file -Force
      shell: pwsh