name: Build Test .NET
description: >
  Build Test .NET
  Outputs are saved.
  For example:
  - Linux Debug -> ./Linux/Debug/build_validation.result
  - Windows Release -> ./Windows/Release/build_validation.result
  - Windows MainOhters -> ./Windows/MainOhters/build_validation.result
inputs:
  project_file_path:
    description: Build Test Project File Path
    required: true
  build_configuration:
    description: Build configuration (e.g., Debug, Release)
    required: true
  dotnet_version:
    description: .NET version to use
    required: true
  result_file:
    description: >
      Result File Name
      For example:
      inputs param
        - Windows, Debug, build_validation.result
      return
        - Widnows/Debug/build_validation.result
    required: false
    default: build_validation.result

runs:
  using: "composite"
  steps:
    - name: Setup .NET environment
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet_version }}

    - name: Build Test on Linux
      if: runner.os == 'Linux'
      run: |
        # Build Test on Linux
        chmod +x ./.scripts/build_validation/dotnet.sh
        ./.scripts/build_validation/dotnet.sh "${{ inputs.project_file_path }}" "${{ inputs.build_configuration }}" "./${{ runner.os }}/${{ inputs.build_configuration }}/${{ inputs.result_file }}"
        chmod -x ./.scripts/build_validation/dotnet.sh
      shell: bash

    - name: Build Test on Windows
      if: runner.os == 'Windows'
      run: |
        # Build Test on Windows
        ./.scripts/build_validation/dotnet.ps1 "${{ inputs.project_file_path }}" "${{ inputs.build_configuration }}" "./${{ runner.os }}/${{ inputs.build_configuration }}/${{ inputs.result_file }}"
      shell: pwsh

