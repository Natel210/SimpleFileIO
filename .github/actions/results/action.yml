name: Results Processor
description: >
  Processes headers and file paths for validation.
inputs:
  headers_and_files:
    description: >
      A JSON string containing header and file path pairs.
      Example: >
        [
          {
            "header": "Git Info",
            "path": "./results/info/git-info.result"
          },
          {
            "header": "File Exist",
            "path": "./results/info/exist-files.result"
          },
          {
            "header": "Values",
            "path": "./results/info/value.result"
          }
        ]
    required: true
  result_to_console:
    required: true
    default: true
  result_file:
    required: false
runs:
  using: "composite"
  steps:
    - run: |
        # Result Make

        # Change script run mode
        chmod +x .scripts/tools/result_output.sh

        headers_and_files='${{ inputs.headers_and_files }}'
        # result_to_console=${{ inputs.result_to_console }}
        # result_file=${{ inputs.result_file }}
        combined_output=""
        echo ${{ headers_and_files }} | jq -c '.[]' | while read -r pair; do
          key=$(echo "$pair" | jq -r '.header')
          path=$(echo "$pair" | jq -r '.path')
          echo "[${key}] ${path}"
          script_output=$( .scripts/tools/result_output.sh "$key" "$path" )
          combined_output+="${script_output}\n"
        done

        echo -e "$combined_output"
        # Final processing based on console and file options
        if [ "${{ inputs.result_to_console }}" = "true" ]; then
          echo -e "$combined_output"
        fi

        if [ -n "${{ inputs.result_file }}" ]; then
          echo -e "$combined_output" > "${{ inputs.result_file }}"
        fi

        # Restore script execution mode
        chmod -x .scripts/tools/result_output.sh
      shell: bash