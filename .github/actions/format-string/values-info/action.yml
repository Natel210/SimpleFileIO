name: Values Info Format
description: >
  Generates text based on values.
inputs:
  path_value_result:
    required: true
  git_value_result:
    required: true
  else_value_result:
    required: true        
runs:
  using: "composite"
  steps:
    - run: |
        # Values Info Format

        temp_file=$(mktemp)

        # Solution & Project
        echo -e "\033[38;5;245m● Solution & Project\033[0m" >> "$temp_file"
        if [[ -z "${{ needs.info-and-check.outputs.path_value_result }}" ]]; then
          echo -e "\033[38;5;245m⚠️ Empty Path Value Result\033[0m" >> "$temp_file"
        else
          echo "${{ needs.info-and-check.outputs.path_value_result }}" | awk '{printf "\033[38;5;245m - %s\033[0m\n", $0}' >> "$temp_file"
        fi

        # Git
        echo -e "\033[38;5;245m● Git\033[0m" >> "$temp_file"
        if [[ -z "${{ needs.info-and-check.outputs.git_value_result }}" ]]; then
          echo -e "\033[38;5;245m⚠️ Empty Git Value Result\033[0m" >> "$temp_file"
        else
          echo "${{ needs.info-and-check.outputs.git_value_result }}" | awk '{printf "\033[38;5;245m - %s\033[0m\n", $0}' >> "$temp_file"
        fi

        # Else
        echo -e "\033[38;5;245m● Else\033[0m" >> "$temp_file"
        if [[ -z "${{ needs.info-and-check.outputs.else_value_result }}" ]]; then
          echo -e "\033[38;5;245m⚠️ Empty Else Value Result\033[0m" >> "$temp_file"
        else
          echo "${{ needs.info-and-check.outputs.else_value_result }}" | awk '{printf "\033[38;5;245m - %s\033[0m\n", $0}' >> "$temp_file"
        fi

        # Delete temp file
        rm -f "$temp_file"

      shell: bash