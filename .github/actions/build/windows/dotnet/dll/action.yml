name: Build .NET DLL (Windows)
description: Build .NET DLLs in a Windows environment, with optional unit tests.
inputs:
  solution_file_path:
    description: The solution file path
    required: true
  dll_project_file_path:
    description: The DLL file path
    required: true
  tester_project_file_path:
    description: The tester project file path (optional)
    required: false
  build_directory_path:
    description: Path to Built Files.
    required: false
    default: "./build"
  configuration:
    description: Build configuration (e.g., Debug, Release)
    required: true
  dotnet_version:
    description: .NET version to use
    required: true
  assembly_version:
    description: Assembly version to apply
    required: false
    default: "0.0.1"
  file_version:
    description: File version to apply
    required: false
    default: "0.0.1"
  informational_version:
    description: Informational version (e.g., pre-release info)
    required: false
    default: "0.0.1"

runs:
  using: "composite"
  steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet_version }}

    - name: Make Build Directory
      run: mkdir -p ./build/${{ inputs.configuration }}
      shell: pwsh

    - name: Restore Dependencies
      run: dotnet restore "${{ inputs.solution_file_path }}" --no-cache
      shell: pwsh

    - name: Build Dll Project
      run: |
        dotnet publish "${{ inputs.dll_project_file }}" --configuration ${{ inputs.configuration }} --no-restore \
        -p:Version=${{ inputs.assembly_version }} \
        -p:FileVersion=${{ inputs.file_version }} \
        -p:InformationalVersion=${{ inputs.informational_version }} \
        --output ${{ inputs.build_directory_path }}/${{ inputs.configuration }}
      shell: pwsh

    - name: Check Tester File
      run: |
        if [[ -z "${{ inputs.tester_project_file }}" ]]; then
          echo "No tester file provided. Skipping unit tests."
        fi
      shell: bash

    - name: Build Test Project
      if: ${{ inputs.tester_project_file != '' }}
      run: |
        dotnet publish "${{ inputs.tester_project_file }}" --configuration ${{ inputs.configuration }} --no-restore \
        -p:OutputName=test \
        --output ${{ inputs.build_directory_path }}/${{ inputs.configuration }} --verbosity normal
      shell: pwsh

    - name: Run Test
      if: ${{ inputs.tester_project_file != '' }}
      run: & ${{ inputs.build_directory_path }}/${{ inputs.configuration }}/test.exe
      shell: pwsh
